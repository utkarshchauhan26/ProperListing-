# ProperEase Quick Start Script
# This script starts both frontend and backend servers

Write-Host "üöÄ Starting ProperEase Development Servers" -ForegroundColor Cyan
Write-Host "===========================================" -ForegroundColor Cyan

# Function to kill processes on specific ports
function Stop-ProcessOnPort {
    param($port)
    try {
        $processes = Get-NetTCPConnection -LocalPort $port -ErrorAction SilentlyContinue | Select-Object OwningProcess -Unique
        foreach ($process in $processes) {
            Stop-Process -Id $process.OwningProcess -Force -ErrorAction SilentlyContinue
        }
        Write-Host "‚úÖ Cleaned up port $port" -ForegroundColor Green
    } catch {
        # Port might not be in use, which is fine
    }
}

# Clean up any existing processes
Write-Host "üßπ Cleaning up existing processes..." -ForegroundColor Yellow
Stop-ProcessOnPort 3000
Stop-ProcessOnPort 3001
Start-Sleep -Seconds 2

# Start Backend Server
Write-Host "`nüîß Starting Backend Server (Port 3001)..." -ForegroundColor Yellow
Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd 'backend'; npm run dev" -WindowStyle Minimized

# Wait for backend to start
Start-Sleep -Seconds 5

# Start Frontend Server
Write-Host "üé® Starting Frontend Server (Port 3000)..." -ForegroundColor Yellow
Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd 'frontend'; npm run dev" -WindowStyle Minimized

# Wait for services to start
Start-Sleep -Seconds 10

Write-Host "`nüéâ Development servers are starting!" -ForegroundColor Green
Write-Host "=================================" -ForegroundColor Green
Write-Host "üîß Backend API: http://localhost:3001" -ForegroundColor Cyan
Write-Host "üé® Frontend App: http://localhost:3000" -ForegroundColor Cyan
Write-Host "üóÑÔ∏è Database Test: http://localhost:3001/test-db" -ForegroundColor Cyan

Write-Host "`nüìä Testing server availability..." -ForegroundColor Yellow

# Test if servers are running
$backendRunning = $false
$frontendRunning = $false

for ($i = 1; $i -le 30; $i++) {
    try {
        if (!$backendRunning) {
            $response = Invoke-RestMethod -Uri "http://localhost:3001/" -TimeoutSec 2 -ErrorAction Stop
            Write-Host "‚úÖ Backend server is running!" -ForegroundColor Green
            $backendRunning = $true
        }
    } catch {
        # Still starting up
    }
    
    try {
        if (!$frontendRunning) {
            $response = Invoke-WebRequest -Uri "http://localhost:3000/" -TimeoutSec 2 -ErrorAction Stop
            Write-Host "‚úÖ Frontend server is running!" -ForegroundColor Green
            $frontendRunning = $true
        }
    } catch {
        # Still starting up
    }
    
    if ($backendRunning -and $frontendRunning) {
        break
    }
    
    Write-Host "‚è≥ Waiting for servers to start... ($i/30)" -ForegroundColor Yellow
    Start-Sleep -Seconds 2
}

if ($backendRunning -and $frontendRunning) {
    Write-Host "`nüéâ Both servers are running successfully!" -ForegroundColor Green
    Write-Host "üíª Open your browser and visit: http://localhost:3000" -ForegroundColor Cyan
    
    # Test database connection
    try {
        $dbTest = Invoke-RestMethod -Uri "http://localhost:3001/test-db" -TimeoutSec 5
        Write-Host "‚úÖ Database connection successful!" -ForegroundColor Green
        Write-Host "üìä Users in database: $($dbTest.userCount)" -ForegroundColor Cyan
        Write-Host "üè† Properties in database: $($dbTest.propertyCount)" -ForegroundColor Cyan
    } catch {
        Write-Host "‚ö†Ô∏è Database connection test failed - check your PostgreSQL setup" -ForegroundColor Yellow
    }
    
} else {
    Write-Host "`n‚ùå Some servers failed to start. Please check the terminal windows for errors." -ForegroundColor Red
    if (!$backendRunning) {
        Write-Host "‚ùå Backend not running - check backend terminal" -ForegroundColor Red
    }
    if (!$frontendRunning) {
        Write-Host "‚ùå Frontend not running - check frontend terminal" -ForegroundColor Red
    }
}

Write-Host "`nüìã Quick Commands:" -ForegroundColor Cyan
Write-Host "=================" -ForegroundColor Cyan
Write-Host "‚Ä¢ Test Project: .\test-project.ps1" -ForegroundColor White
Write-Host "‚Ä¢ View Logs: Check the minimized terminal windows" -ForegroundColor White
Write-Host "‚Ä¢ Stop Servers: Close the terminal windows or press Ctrl+C in each" -ForegroundColor White
Write-Host "‚Ä¢ Database Studio: cd backend && npx prisma studio" -ForegroundColor White

Read-Host "`nPress Enter to continue..."
